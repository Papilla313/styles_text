{"ast":null,"code":"import * as _ReactNativeCSSInterop from \"react-native-css-interop\";\nvar _jsxFileName = \"C:\\\\Users\\\\RYZEN 7\\\\Documents\\\\Code\\\\styles_test\\\\example_app\\\\AwesomeProject\\\\src\\\\components\\\\Home\\\\index.tsx\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport View from \"react-native-web/dist/exports/View\";\nimport { VanillaView } from \"../VanillaView\";\nimport ReactNativeView from \"../ReactNativeView\";\nimport { jsx as _jsx } from \"react-native-css-interop/jsx-runtime\";\nexport const Home = () => {\n  const location = useLocation();\n  const [currentViewName, setCurrentViewName] = useState(null);\n  const navigate = useNavigate();\n  const views = useMemo(() => {\n    return {\n      default: VanillaView,\n      ReactNativeView: ReactNativeView\n    };\n  }, []);\n  const currentViewComponent = useMemo(() => {\n    return views[currentViewName || \"\"] || views[\"default\"];\n  }, [currentViewName, views]);\n  const setQueryParam = newView => {\n    const updatedParams = new URLSearchParams(location.search);\n    updatedParams.set('view', newView);\n    setCurrentViewName(newView || 'default');\n    navigate({\n      pathname: location.pathname,\n      search: updatedParams.toString()\n    });\n  };\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentView = params.get('view');\n    console.log(currentView);\n    setCurrentViewName(currentView || 'default');\n  }, [location.search]);\n  return _jsx(View, {\n    children: !!currentViewComponent && _ReactNativeCSSInterop.createInteropElement(currentViewComponent, {\n      navBarAction: setQueryParam,\n      navBarOptions: Object.keys(views)\n    })\n  });\n};","map":{"version":3,"names":["React","useEffect","useMemo","useState","useLocation","useNavigate","View","VanillaView","ReactNativeView","jsx","_jsx","Home","location","currentViewName","setCurrentViewName","navigate","views","default","currentViewComponent","setQueryParam","newView","updatedParams","URLSearchParams","search","set","pathname","toString","params","currentView","get","console","log","children","_ReactNativeCSSInterop","createInteropElement","navBarAction","navBarOptions","Object","keys"],"sources":["C:/Users/RYZEN 7/Documents/Code/styles_test/example_app/AwesomeProject/src/components/Home/index.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\"\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { View } from \"react-native\";\r\nimport { VanillaView } from \"../VanillaView\";\r\nimport ReactNativeView from \"../ReactNativeView\";\r\nimport NativeWindView from \"../NativeWindView\";\r\n\r\nexport const Home = () => {\r\n    const location = useLocation();\r\n    const [currentViewName, setCurrentViewName] = useState<string | null>(null);\r\n    const navigate = useNavigate();\r\n\r\n    const views: any = useMemo(() => {\r\n        return {\r\n            default: VanillaView,\r\n            ReactNativeView: ReactNativeView,\r\n        }\r\n    }, [])\r\n\r\n    const currentViewComponent = useMemo(() => {\r\n        return views[currentViewName || \"\"] || views[\"default\"]\r\n\r\n    }, [currentViewName, views])\r\n\r\n    const setQueryParam = (newView: string) => {\r\n        const updatedParams = new URLSearchParams(location.search);\r\n        updatedParams.set('view', newView);\r\n        setCurrentViewName(newView || 'default')\r\n        \r\n        navigate({\r\n          pathname: location.pathname,  // Keep the current path\r\n          search: updatedParams.toString(),  // Update query string\r\n        });\r\n      };\r\n\r\n    useEffect(() => {\r\n        // Parse query parameters\r\n        const params = new URLSearchParams(location.search);\r\n        const currentView = params.get('view'); // Assume ?view=someView\r\n        console.log(currentView)\r\n        setCurrentViewName(currentView || 'default'); // Fallback to 'default'\r\n    }, [location.search]);\r\n\r\n    return (\r\n        <View>\r\n            {!!currentViewComponent && React.createElement(currentViewComponent, { navBarAction: setQueryParam, navBarOptions: Object.keys(views) })}\r\n        </View>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,OAAAC,IAAA;AAE5D,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,eAAe,MAAM,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAGjD,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACtB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAC3E,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,KAAU,GAAGd,OAAO,CAAC,MAAM;IAC7B,OAAO;MACHe,OAAO,EAAEV,WAAW;MACpBC,eAAe,EAAEA;IACrB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,oBAAoB,GAAGhB,OAAO,CAAC,MAAM;IACvC,OAAOc,KAAK,CAACH,eAAe,IAAI,EAAE,CAAC,IAAIG,KAAK,CAAC,SAAS,CAAC;EAE3D,CAAC,EAAE,CAACH,eAAe,EAAEG,KAAK,CAAC,CAAC;EAE5B,MAAMG,aAAa,GAAIC,OAAe,IAAK;IACvC,MAAMC,aAAa,GAAG,IAAIC,eAAe,CAACV,QAAQ,CAACW,MAAM,CAAC;IAC1DF,aAAa,CAACG,GAAG,CAAC,MAAM,EAAEJ,OAAO,CAAC;IAClCN,kBAAkB,CAACM,OAAO,IAAI,SAAS,CAAC;IAExCL,QAAQ,CAAC;MACPU,QAAQ,EAAEb,QAAQ,CAACa,QAAQ;MAC3BF,MAAM,EAAEF,aAAa,CAACK,QAAQ,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC;EAEHzB,SAAS,CAAC,MAAM;IAEZ,MAAM0B,MAAM,GAAG,IAAIL,eAAe,CAACV,QAAQ,CAACW,MAAM,CAAC;IACnD,MAAMK,WAAW,GAAGD,MAAM,CAACE,GAAG,CAAC,MAAM,CAAC;IACtCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;IACxBd,kBAAkB,CAACc,WAAW,IAAI,SAAS,CAAC;EAChD,CAAC,EAAE,CAAChB,QAAQ,CAACW,MAAM,CAAC,CAAC;EAErB,OACIb,IAAA,CAACJ,IAAI;IAAA0B,QAAA,EACA,CAAC,CAACd,oBAAoB,IAAIe,sBAAA,CAAAC,oBAAA,CAAoBhB,oBAAoB,EAAE;MAAEiB,YAAY,EAAEhB,aAAa;MAAEiB,aAAa,EAAEC,MAAM,CAACC,IAAI,CAACtB,KAAK;IAAE,CAAC;EAAC,CACtI,CAAC;AAEf,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}