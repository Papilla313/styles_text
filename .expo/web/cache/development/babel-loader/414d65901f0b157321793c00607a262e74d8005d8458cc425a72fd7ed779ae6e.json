{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNormalizeConfig = getNormalizeConfig;\nfunction getNormalizeConfig(mapping) {\n  const configs = [];\n  for (const [source, options] of Object.entries(mapping)) {\n    let target;\n    let inlineProp;\n    let propToRemove;\n    let nativeStyleToProp;\n    if (!options) continue;\n    if (options === true) {\n      target = [source];\n    } else if (typeof options === \"string\") {\n      target = [options];\n    } else if (options.target === false) {\n      target = [source];\n      propToRemove = source;\n      nativeStyleToProp = parseNativeStyleToProp(options.nativeStyleToProp);\n    } else {\n      target = options.target === true ? [source] : options.target.split(\".\");\n      nativeStyleToProp = parseNativeStyleToProp(options.nativeStyleToProp);\n    }\n    if (target.length === 1 && target[0] !== source) {\n      inlineProp = target[0];\n    }\n    configs.push({\n      nativeStyleToProp,\n      source,\n      target,\n      inlineProp,\n      propToRemove\n    });\n  }\n  return configs;\n}\nfunction parseNativeStyleToProp(nativeStyleToProp) {\n  if (!nativeStyleToProp) return;\n  return Object.entries(nativeStyleToProp).map(([key, value]) => {\n    return [key, value === true ? [key] : value.split(\".\")];\n  });\n}","map":{"version":3,"names":["exports","getNormalizeConfig","mapping","configs","source","options","Object","entries","target","inlineProp","propToRemove","nativeStyleToProp","parseNativeStyleToProp","split","length","push","map","key","value"],"sources":["C:\\Users\\RYZEN 7\\Documents\\Code\\styles_test\\example_app\\AwesomeProject\\node_modules\\react-native-css-interop\\src\\runtime\\config.ts"],"sourcesContent":["import { EnableCssInteropOptions, InteropComponentConfig } from \"../types\";\n\nexport function getNormalizeConfig(\n  mapping: EnableCssInteropOptions<any>,\n): InteropComponentConfig[] {\n  const configs: InteropComponentConfig[] = [];\n\n  for (const [source, options] of Object.entries(mapping)) {\n    let target: string[];\n    let inlineProp: string | undefined;\n    let propToRemove: string | undefined;\n    let nativeStyleToProp: InteropComponentConfig[\"nativeStyleToProp\"];\n\n    if (!options) continue;\n\n    if (options === true) {\n      target = [source];\n    } else if (typeof options === \"string\") {\n      target = [options];\n    } else if (options.target === false) {\n      /*\n       * Even when target == false, you still need to process as normal. As nativeStyleToProp may move a style\n       * Once the styles are moved, you then need to remove the prop as there maybe left over styles\n       * e.g paddingTop: calc(10 + 2em). The user may also set a fontSize here to force a value of the `em`\n       */\n      target = [source];\n      propToRemove = source;\n      nativeStyleToProp = parseNativeStyleToProp(options.nativeStyleToProp);\n    } else {\n      target = options.target === true ? [source] : options.target.split(\".\");\n      nativeStyleToProp = parseNativeStyleToProp(options.nativeStyleToProp);\n    }\n\n    if (target.length === 1 && target[0] !== source) {\n      inlineProp = target[0];\n    }\n\n    configs.push({\n      nativeStyleToProp,\n      source,\n      target,\n      inlineProp,\n      propToRemove,\n    });\n  }\n\n  return configs;\n}\n\nfunction parseNativeStyleToProp(\n  nativeStyleToProp?: Record<string, string | true>,\n): InteropComponentConfig[\"nativeStyleToProp\"] {\n  if (!nativeStyleToProp) return;\n\n  return Object.entries(nativeStyleToProp).map(([key, value]) => {\n    return [key, value === true ? [key] : value.split(\".\")];\n  });\n}\n"],"mappings":";;;;;AAEAA,OAAA,CAAAC,kBAAA,GAAAA,kBAAA;AAAA,SAAgBA,kBAAkBA,CAChCC,OAAqC;EAErC,MAAMC,OAAO,GAA6B,EAAE;EAE5C,KAAK,MAAM,CAACC,MAAM,EAAEC,OAAO,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACL,OAAO,CAAC,EAAE;IACvD,IAAIM,MAAgB;IACpB,IAAIC,UAA8B;IAClC,IAAIC,YAAgC;IACpC,IAAIC,iBAA8D;IAElE,IAAI,CAACN,OAAO,EAAE;IAEd,IAAIA,OAAO,KAAK,IAAI,EAAE;MACpBG,MAAM,GAAG,CAACJ,MAAM,CAAC;IACnB,CAAC,MAAM,IAAI,OAAOC,OAAO,KAAK,QAAQ,EAAE;MACtCG,MAAM,GAAG,CAACH,OAAO,CAAC;IACpB,CAAC,MAAM,IAAIA,OAAO,CAACG,MAAM,KAAK,KAAK,EAAE;MAMnCA,MAAM,GAAG,CAACJ,MAAM,CAAC;MACjBM,YAAY,GAAGN,MAAM;MACrBO,iBAAiB,GAAGC,sBAAsB,CAACP,OAAO,CAACM,iBAAiB,CAAC;IACvE,CAAC,MAAM;MACLH,MAAM,GAAGH,OAAO,CAACG,MAAM,KAAK,IAAI,GAAG,CAACJ,MAAM,CAAC,GAAGC,OAAO,CAACG,MAAM,CAACK,KAAK,CAAC,GAAG,CAAC;MACvEF,iBAAiB,GAAGC,sBAAsB,CAACP,OAAO,CAACM,iBAAiB,CAAC;IACvE;IAEA,IAAIH,MAAM,CAACM,MAAM,KAAK,CAAC,IAAIN,MAAM,CAAC,CAAC,CAAC,KAAKJ,MAAM,EAAE;MAC/CK,UAAU,GAAGD,MAAM,CAAC,CAAC,CAAC;IACxB;IAEAL,OAAO,CAACY,IAAI,CAAC;MACXJ,iBAAiB;MACjBP,MAAM;MACNI,MAAM;MACNC,UAAU;MACVC;KACD,CAAC;EACJ;EAEA,OAAOP,OAAO;AAChB;AAEA,SAASS,sBAAsBA,CAC7BD,iBAAiD;EAEjD,IAAI,CAACA,iBAAiB,EAAE;EAExB,OAAOL,MAAM,CAACC,OAAO,CAACI,iBAAiB,CAAC,CAACK,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAI;IAC5D,OAAO,CAACD,GAAG,EAAEC,KAAK,KAAK,IAAI,GAAG,CAACD,GAAG,CAAC,GAAGC,KAAK,CAACL,KAAK,CAAC,GAAG,CAAC,CAAC;EACzD,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}