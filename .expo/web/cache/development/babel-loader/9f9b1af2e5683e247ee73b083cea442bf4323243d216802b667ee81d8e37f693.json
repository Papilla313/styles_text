{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformKeys = exports.inlineSpecificity = exports.SpecificityIndex = exports.STYLE_SCOPES = exports.DEFAULT_CONTAINER_NAME = exports.PLACEHOLDER_SYMBOL = exports.StyleRuleSymbol = exports.StyleRuleSetSymbol = exports.INTERNAL_FLAGS = exports.INTERNAL_SET = exports.INTERNAL_RESET = void 0;\nexports.isDescriptorFunction = isDescriptorFunction;\nexports.isDescriptorArray = isDescriptorArray;\nexports.isRuntimeDescriptor = isRuntimeDescriptor;\nexports.assignToTarget = assignToTarget;\nexports.getTargetValue = getTargetValue;\nconst shared_1 = require(\"./runtime/native/resolvers/shared\");\nexports.INTERNAL_RESET = Symbol();\nexports.INTERNAL_SET = Symbol();\nexports.INTERNAL_FLAGS = Symbol();\nexports.StyleRuleSetSymbol = Symbol();\nexports.StyleRuleSymbol = Symbol();\nexports.PLACEHOLDER_SYMBOL = Symbol();\nexports.DEFAULT_CONTAINER_NAME = \"@__\";\nexports.STYLE_SCOPES = {\n  GLOBAL: 0,\n  CONTEXT: 1,\n  SELF: 2\n};\nfunction isDescriptorFunction(value) {\n  return Array.isArray(value) && typeof value[0] === \"object\" && !Array.isArray(value[0]);\n}\nfunction isDescriptorArray(value) {\n  if (Array.isArray(value)) {\n    return typeof value[0] === \"object\" ? Array.isArray(value[0]) : true;\n  }\n  return false;\n}\nfunction isRuntimeDescriptor(value) {\n  if (typeof value === \"object\" && Array.isArray(value)) {\n    return true;\n  } else {\n    return typeof value !== \"object\";\n  }\n}\nfunction assignToTarget(parent, value, config, options = {}) {\n  if (typeof value === \"object\" && shared_1.ShorthandSymbol in value) {\n    return value.map(shorthandConfig => {\n      let pathTokens = Array.from(Array.isArray(config) ? config : config.target);\n      const shortHandProp = shorthandConfig[0];\n      if (typeof shortHandProp === \"string\") {\n        pathTokens.splice(-1, 1, shortHandProp);\n      } else {\n        pathTokens.splice(-1, 1, ...shortHandProp);\n      }\n      assignToTarget(parent, shorthandConfig[1], pathTokens, options);\n    });\n  }\n  const {\n    arrayMergeStyle = \"push\",\n    objectMergeStyle = \"assign\",\n    allowTransformMerging = false,\n    reverseTransformPush = false\n  } = options;\n  let prop;\n  let props = Array.isArray(config) ? config : config.target;\n  if (props.length === 0) {\n    Object.assign(parent, value);\n    return;\n  }\n  for (let index = 0; index < props.length - 1; index++) {\n    prop = props[index];\n    if (Array.isArray(parent) && isFinite(Number(prop))) {\n      prop = Number(prop);\n    }\n    if (typeof parent[prop] !== \"object\") {\n      parent[prop] = {};\n    } else if (Object.isFrozen(parent[prop])) {\n      parent[prop] = Object.assign({}, parent[prop]);\n    }\n    parent = parent[prop];\n  }\n  prop = props[props.length - 1];\n  if (allowTransformMerging && exports.transformKeys.has(prop)) {\n    let existing;\n    if (!Array.isArray(parent.transform)) {\n      parent.transform = [];\n    } else {\n      existing = parent.transform.find(t => prop in t);\n    }\n    if (existing) {\n      existing[prop] = value;\n    } else {\n      if (reverseTransformPush) {\n        parent.transform.shift({\n          [prop]: value\n        });\n      } else {\n        parent.transform.push({\n          [prop]: value\n        });\n      }\n    }\n  } else {\n    const target = parent[prop];\n    if (Array.isArray(target)) {\n      switch (arrayMergeStyle) {\n        case \"push\":\n          target.push(value);\n      }\n    } else if (typeof target === \"object\" && target && !(exports.PLACEHOLDER_SYMBOL in target)) {\n      switch (objectMergeStyle) {\n        case \"assign\":\n          {\n            if (typeof value === \"object\") {\n              parent[prop] = Object.assign({}, parent[prop], value);\n            } else {\n              parent[prop] = value;\n            }\n            break;\n          }\n        case \"toArray\":\n          {\n            parent[prop] = [target, value];\n          }\n      }\n    } else if (value && typeof value === \"object\" && !(\"_isReanimatedSharedValue\" in value) && !(exports.PLACEHOLDER_SYMBOL in value) && !Array.isArray(value)) {\n      parent[prop] = Object.assign({}, value);\n    } else {\n      parent[prop] = value;\n    }\n  }\n}\nfunction getTargetValue(parent, props) {\n  let prop;\n  props = typeof props === \"string\" ? [props] : props;\n  for (let index = 0; index < props.length - 1; index++) {\n    prop = props[index];\n    if (Array.isArray(parent) && isFinite(Number(prop))) {\n      prop = Number(prop);\n    }\n    if (typeof parent[prop] !== \"object\") {\n      parent[prop] = {};\n    }\n    parent = parent[prop];\n  }\n  prop = props[props.length - 1];\n  if (exports.transformKeys.has(prop)) {\n    let existing;\n    if (!Array.isArray(parent.transform)) {\n      parent.transform = [];\n    } else {\n      existing = parent.transform.find(t => prop in t);\n    }\n    return existing?.[prop];\n  } else {\n    return parent[prop];\n  }\n}\nexports.SpecificityIndex = {\n  Order: 0,\n  ClassName: 1,\n  Important: 2,\n  Inline: 3,\n  PseudoElements: 4\n};\nexports.inlineSpecificity = [];\nexports.inlineSpecificity[exports.SpecificityIndex.Inline] = 1;\nexports.transformKeys = new Set([\"translateX\", \"translateY\", \"scale\", \"scaleX\", \"scaleY\", \"rotate\", \"rotateX\", \"rotateY\", \"rotateZ\", \"skewX\", \"skewY\", \"perspective\", \"matrix\", \"transformOrigin\"]);","map":{"version":3,"names":["exports","isDescriptorFunction","isDescriptorArray","isRuntimeDescriptor","assignToTarget","getTargetValue","shared_1","require","INTERNAL_RESET","Symbol","INTERNAL_SET","INTERNAL_FLAGS","StyleRuleSetSymbol","StyleRuleSymbol","PLACEHOLDER_SYMBOL","DEFAULT_CONTAINER_NAME","STYLE_SCOPES","GLOBAL","CONTEXT","SELF","value","Array","isArray","parent","config","options","ShorthandSymbol","map","shorthandConfig","pathTokens","from","target","shortHandProp","splice","arrayMergeStyle","objectMergeStyle","allowTransformMerging","reverseTransformPush","prop","props","length","Object","assign","index","isFinite","Number","isFrozen","transformKeys","has","existing","transform","find","t","shift","push","SpecificityIndex","Order","ClassName","Important","Inline","PseudoElements","inlineSpecificity","Set"],"sources":["C:\\Users\\RYZEN 7\\Documents\\Code\\styles_test\\example_app\\AwesomeProject\\node_modules\\react-native-css-interop\\src\\shared.ts"],"sourcesContent":["import type { SharedValue } from \"react-native-reanimated\";\n\nimport { ShorthandSymbol } from \"./runtime/native/resolvers/shared\";\nimport type { Placeholder, ShorthandResult } from \"./runtime/native/types\";\nimport {\n  InteropComponentConfig,\n  RuntimeStyle,\n  RuntimeValueDescriptor,\n  Specificity,\n} from \"./types\";\n\nexport const INTERNAL_RESET: unique symbol = Symbol();\nexport const INTERNAL_SET: unique symbol = Symbol();\nexport const INTERNAL_FLAGS: unique symbol = Symbol();\nexport const StyleRuleSetSymbol: unique symbol = Symbol();\nexport const StyleRuleSymbol: unique symbol = Symbol();\n\nexport const PLACEHOLDER_SYMBOL: unique symbol = Symbol();\n\nexport const DEFAULT_CONTAINER_NAME = \"@__\";\n\nexport const STYLE_SCOPES = {\n  /** @description Style is the same globally */\n  GLOBAL: 0,\n  /** @description Style is the same within a context (variables / containers) */\n  CONTEXT: 1,\n  /** @description Style can affect other styles (sets variables, uses other styles) */\n  SELF: 2,\n};\n\nexport function isDescriptorFunction(\n  value: RuntimeValueDescriptor | RuntimeValueDescriptor[],\n): value is Extract<RuntimeValueDescriptor, [{}, ...any[]]> {\n  return (\n    Array.isArray(value) &&\n    typeof value[0] === \"object\" &&\n    !Array.isArray(value[0])\n  );\n}\n\nexport function isDescriptorArray(\n  value: RuntimeValueDescriptor | RuntimeValueDescriptor[],\n): value is RuntimeValueDescriptor[] {\n  if (Array.isArray(value)) {\n    // If its an array and the first item is an object, the only allowed value is an array\n    // Otherwise this is a RuntimeDescriptorFunction\n    return typeof value[0] === \"object\" ? Array.isArray(value[0]) : true;\n  }\n\n  return false;\n}\n\nexport function isRuntimeDescriptor(\n  value: RuntimeStyle,\n): value is RuntimeValueDescriptor {\n  if (typeof value === \"object\" && Array.isArray(value)) {\n    return true;\n  } else {\n    return typeof value !== \"object\";\n  }\n}\n\ntype ArrayMergeStyles = \"push\";\ntype ObjectMergeStyles = \"assign\" | \"toArray\";\n\nexport function assignToTarget(\n  parent: Record<string, any>,\n  value:\n    | Record<string, unknown>\n    | RuntimeValueDescriptor\n    | SharedValue<any>\n    | ShorthandResult\n    | Placeholder,\n  config: InteropComponentConfig | string[],\n  options: {\n    arrayMergeStyle?: ArrayMergeStyles;\n    objectMergeStyle?: ObjectMergeStyles;\n    allowTransformMerging?: boolean;\n    reverseTransformPush?: boolean;\n  } = {},\n) {\n  /**\n   * Handle shorthands first\n   */\n  if (typeof value === \"object\" && ShorthandSymbol in value) {\n    return value.map((shorthandConfig) => {\n      let pathTokens = Array.from(\n        Array.isArray(config) ? config : config.target,\n      );\n\n      const shortHandProp = shorthandConfig[0];\n      if (typeof shortHandProp === \"string\") {\n        pathTokens.splice(-1, 1, shortHandProp);\n      } else {\n        pathTokens.splice(-1, 1, ...shortHandProp);\n      }\n\n      assignToTarget(parent, shorthandConfig[1], pathTokens, options);\n    });\n  }\n\n  const {\n    arrayMergeStyle = \"push\",\n    objectMergeStyle = \"assign\",\n    allowTransformMerging = false,\n    reverseTransformPush = false,\n  } = options;\n\n  let prop: string | number;\n\n  let props = Array.isArray(config) ? config : config.target;\n\n  if (props.length === 0) {\n    Object.assign(parent, value);\n    return;\n  }\n\n  for (let index = 0; index < props.length - 1; index++) {\n    prop = props[index];\n\n    if (Array.isArray(parent) && isFinite(Number(prop))) {\n      prop = Number(prop);\n    }\n\n    if (typeof parent[prop] !== \"object\") {\n      parent[prop] = {};\n    } else if (Object.isFrozen(parent[prop])) {\n      parent[prop] = Object.assign({}, parent[prop]);\n    }\n\n    parent = parent[prop];\n  }\n\n  // Now use the last value\n  prop = props[props.length - 1];\n\n  if (allowTransformMerging && transformKeys.has(prop)) {\n    let existing;\n    if (!Array.isArray(parent.transform)) {\n      parent.transform = [];\n    } else {\n      existing = parent.transform.find((t: object) => prop in t);\n    }\n\n    if (existing) {\n      existing[prop] = value;\n    } else {\n      if (reverseTransformPush) {\n        parent.transform.shift({ [prop]: value });\n      } else {\n        parent.transform.push({ [prop]: value });\n      }\n    }\n  } else {\n    const target = parent[prop];\n\n    if (Array.isArray(target)) {\n      switch (arrayMergeStyle) {\n        case \"push\":\n          target.push(value);\n      }\n    } else if (\n      typeof target === \"object\" &&\n      target &&\n      !(PLACEHOLDER_SYMBOL in target)\n    ) {\n      switch (objectMergeStyle) {\n        case \"assign\": {\n          if (typeof value === \"object\") {\n            parent[prop] = Object.assign({}, parent[prop], value);\n          } else {\n            parent[prop] = value;\n          }\n          break;\n        }\n        case \"toArray\": {\n          parent[prop] = [target, value];\n        }\n      }\n    } else if (\n      value &&\n      typeof value === \"object\" &&\n      !(\"_isReanimatedSharedValue\" in value) &&\n      !(PLACEHOLDER_SYMBOL in value) &&\n      !Array.isArray(value)\n    ) {\n      parent[prop] = Object.assign({}, value);\n    } else {\n      parent[prop] = value;\n    }\n  }\n}\n\nexport function getTargetValue(\n  parent: Record<string, any>,\n  props: string | string[],\n) {\n  let prop: string | number;\n\n  props = typeof props === \"string\" ? [props] : props;\n\n  for (let index = 0; index < props.length - 1; index++) {\n    prop = props[index];\n\n    if (Array.isArray(parent) && isFinite(Number(prop))) {\n      prop = Number(prop);\n    }\n\n    if (typeof parent[prop] !== \"object\") {\n      parent[prop] = {};\n    }\n\n    parent = parent[prop];\n  }\n\n  // Now use the last value\n  prop = props[props.length - 1];\n\n  if (transformKeys.has(prop)) {\n    let existing;\n    if (!Array.isArray(parent.transform)) {\n      parent.transform = [];\n    } else {\n      existing = parent.transform.find((t: object) => prop in t);\n    }\n\n    return existing?.[prop];\n  } else {\n    return parent[prop];\n  }\n}\n\nexport const SpecificityIndex = {\n  Order: 0,\n  ClassName: 1,\n  Important: 2,\n  Inline: 3,\n  PseudoElements: 4,\n  // Id: 0, - We don't support ID yet\n  // StyleSheet: 0, - WE don't support multiple stylesheets\n};\n\nexport const inlineSpecificity: Specificity = [];\ninlineSpecificity[SpecificityIndex.Inline] = 1;\n\nexport const transformKeys = new Set([\n  \"translateX\",\n  \"translateY\",\n  \"scale\",\n  \"scaleX\",\n  \"scaleY\",\n  \"rotate\",\n  \"rotateX\",\n  \"rotateY\",\n  \"rotateZ\",\n  \"skewX\",\n  \"skewY\",\n  \"perspective\",\n  \"matrix\",\n  \"transformOrigin\",\n]);\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}